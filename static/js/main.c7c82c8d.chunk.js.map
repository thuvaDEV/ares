{"version":3,"sources":["AppLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Layout","Content","getPage","nav","AppLayout","useState","setNav","className","theme","mode","onClick","e","key","defaultSelectedKeys","Item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAOQA,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAEhB,SAASC,EAAQC,GAEb,MAAM,QAAN,OAAeA,GAwBJC,MArBf,WACE,MAAsBC,mBAAS,KAA/B,mBAAOF,EAAP,KAAYG,EAAZ,KAEA,OACE,eAAC,IAAD,CAAQC,UAAU,aAAlB,UACE,eAACR,EAAD,WACE,qBAAKQ,UAAU,aACf,cAAC,IAAD,CACEC,MAAM,OACNC,KAAK,aACLC,QAAS,SAACC,GAAD,OAAOL,EAAOK,EAAEC,MACzBC,oBAAqB,CAAC,KAJxB,SAME,cAAC,IAAKC,KAAN,uBAAe,UAGnB,cAACb,EAAD,CAASM,UAAU,qBAAnB,SAAyCL,EAAQC,S,MCjBxCY,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7c82c8d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport \"./AppLayout.less\";\n// import { Dashboard } from \"./pages\";\n\n//Code is for the layout with three tabs.\n\nconst { Header, Content } = Layout;\n\nfunction getPage(nav: string) {\n    // return <Dashboard />;\n    return `test ${nav}`;\n}\n\nfunction AppLayout() {\n  const [nav, setNav] = useState(\"1\");\n\n  return (\n    <Layout className=\"ars-layout\">\n      <Header>\n        <div className=\"ars-logo\" />\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          onClick={(e) => setNav(e.key)}\n          defaultSelectedKeys={[\"1\"]}\n        >\n          <Menu.Item key=\"1\">Dashboard</Menu.Item>\n        </Menu>\n      </Header>\n      <Content className=\"ars-layout-content\">{getPage(nav)}</Content>\n    </Layout>\n  );\n}\n\nexport default AppLayout;","import { RecoilRoot } from \"recoil\";\nimport AppLayout from \"./AppLayout\";\nimport './App.less';\n\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <AppLayout />\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}