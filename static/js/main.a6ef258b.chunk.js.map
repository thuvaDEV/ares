{"version":3,"sources":["store/atoms.tsx","mock/widgets.ts","shared/util.tsx","data-com/api.tsx","widgets/SummaryWidget/SummaryWidget.tsx","widgets/ChartWidget/ChartWidget.tsx","widgets/WidgetShell/WidgetShell.tsx","widgets/EditWidgetModal/EditWidgetModal.tsx","widgets/DeleteWidgetModal/DeleteWidgetModal.tsx","pages/dashboard/Dashboard.tsx","AppLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["widgetDefsState","atom","key","default","widgetDefState","editModalVisibleState","deleteModalVisibleState","gridLayoutState","widgetDataState","widgets","replaceItemAtIndex","arr","index","newValue","slice","serverUrl","api","header","deleteWidgetData","widgetDef","a","options","method","headers","fetch","id","response","json","data","putWidgetData","body","JSON","stringify","Select","Option","SummaryWidget","useState","year","setYear","useRecoilValue","useRecoilState","widgetDefs","setWidgetDefs","className","defaultValue","style","width","size","onChange","value","newWidgetDef","findIndex","e","newList","console","log","ChartWidget","field","setField","title","handleButtonClick","message","info","WidgetShell","setEditModalVisible","setDeleteModalVisible","menu","onClick","Item","icon","EditOutlined","DeleteOutlined","CopyOutlined","CameraOutlined","Button","EllipsisOutlined","type","overlay","getWidget","Paragraph","Typography","EditWidgetModal","modalVisible","setModalVisible","setWidgetDef","editable","visible","onOk","then","onCancel","DeleteWidgetModal","handleOk","filter","handleCancel","footer","ReactGridLayout","WidthProvider","RGL","Dashboard","gridLayout","setGridLayout","setWidgetData","useEffect","gridProps","isDraggable","isResizable","items","rowHeight","cols","onResizeStop","onLayoutChange","shape","LayoutOutlined","hMap","map","layout","data-grid","Header","Layout","Content","AppLayout","setNav","theme","mode","defaultSelectedKeys","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ef258b.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\n// A store of all the atoms that can be accessed using recoil\n\nexport const widgetType = {\n  notes: \"NOTES\",\n  chart: \"CHART\",\n  default: \"DEFAULT\",\n};\n\nexport const widgetDefsState = atom({\n  key: \"widgetDefsState\",\n  default: [],\n} as { key: string, default: WidgetDefinition [] });\n\nexport const widgetDefState = atom({\n  key: \"widgetDefState\",\n  default: {},\n} as { key: string, default: WidgetDefinition });\n\nexport const editModalVisibleState = atom({\n  key: \"editModalVisibleState\",\n  default: false,\n});\n\nexport const deleteModalVisibleState = atom({\n  key: \"deleteModalVisibleState\",\n  default: false,\n});\n\nexport const gridLayoutState = atom({\n  key: \"gridLayoutState\",\n  default: [],\n})\n\nexport const widgetDataState = atom({\n  key: \"widgetDataState\",\n  default: {},\n});\n\n\nexport interface WidgetDefinition {\n    id: string;\n    x: 25,\n    \"y\": 0,\n    \"w\": 24,\n    \"h\": 25,\n    \"minW\": 10,\n    \"title\": \"Canada's Economy\",\n    \"type\": \"SUMMARY\",\n    \"data\": any\n    \"moved\": false,\n    \"static\": false\n}","\nexport const widgets = [\n    {\n      \"id\": \"b96b559e-e89f-4fd8-aedd-05232fef5886\",\n      \"x\": 49,\n      \"y\": 19,\n      \"w\": 48,\n      \"h\": 26,\n      \"minW\": 10,\n      \"title\": \"Inflation %\",\n      \"type\": \"CHART\",\n      \"data\": {\n        \"field\": \"Inflation %\"\n      },\n      \"moved\": false,\n      \"static\": false\n    },\n    {\n      \"id\": \"363a6652-8c8e-44fb-a312-1ccb10b3b8d8\",\n      \"x\": 0,\n      \"y\": 25,\n      \"w\": 49,\n      \"h\": 19,\n      \"minW\": 10,\n      \"title\": \"Notes on Growth\",\n      \"moved\": false,\n      \"static\": false\n    },\n    {\n      \"id\": \"ca94be55-9081-4101-8bb2-f37323176e49\",\n      \"x\": 0,\n      \"y\": 0,\n      \"w\": 25,\n      \"h\": 25,\n      \"minW\": 10,\n      \"title\": \"Canada's Economy\",\n      \"type\": \"SUMMARY\",\n      \"data\": {\n        \"year\": \"2019\"\n      },\n      \"moved\": false,\n      \"static\": false\n    },\n    {\n      \"id\": \"e67cebc2-64d1-4eb7-a091-7833ecddd0cb\",\n      \"x\": 25,\n      \"y\": 0,\n      \"w\": 24,\n      \"h\": 25,\n      \"minW\": 10,\n      \"title\": \"Canada's Economy\",\n      \"type\": \"SUMMARY\",\n      \"data\": {\n        \"year\": \"2015\"\n      },\n      \"moved\": false,\n      \"static\": false\n    },\n    {\n      \"id\": \"4820142f-b98c-4861-90d9-28de4a7a3ac0\",\n      \"x\": 49,\n      \"y\": 0,\n      \"w\": 49,\n      \"h\": 19,\n      \"minW\": 10,\n      \"title\": \"Government net lending/borrowing %\",\n      \"subTitle\": \"2020\",\n      \"type\": \"CHART\",\n      \"data\": {\n        \"field\": \"Government net lending/borrowing %\"\n      },\n      \"moved\": false,\n      \"static\": false\n    },\n    {\n      \"id\": \"29265280-a4d4-4fd8-83ad-b2f20575f010\",\n      \"x\": 49,\n      \"y\": 45,\n      \"w\": 49,\n      \"h\": 13,\n      \"minW\": 10,\n      \"title\": \"Notes on Growth\",\n      \"moved\": false,\n      \"static\": false\n    }\n  ];\n","export function replaceItemAtIndex(arr: any, index: any, newValue: any) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n  }\n  \n  export function removeItemAtIndex(arr: any, index: any) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n  }\n  ","import { WidgetDefinition } from \"../store/atoms\";\n\n// The Endpoint URL\nconst serverUrl = \"http://localhost:3000/\";\n\n\n  // export enum DataType {\n  //   mock: \"MOCK\",\n  //   api: \"API\"\n  // };\n\nconst api = {\n  widgets: \"widgets\",\n  data: \"data\",\n};\n\nconst header = { \"Content-Type\": \"application/json;charset=utf-8\" };\n\nexport const getWidgetsData = async () => {\n  let response = await fetch(serverUrl + api.widgets);\n  let data = await response.json();\n  return data;\n};\n\nexport const getData = async () => {\n  let response = await fetch(serverUrl + api.data);\n  let data = await response.json();\n  return data;\n};\n\nexport const postWidgetData = async (widgetDef:WidgetDefinition) => {\n  // Request options\n  let options = {\n    method: \"POST\",\n    headers: header,\n    body: JSON.stringify(widgetDef),\n  };\n  let response = await fetch(serverUrl + api.widgets, options);\n  let data = await response.json();\n  return data;\n};\n\nexport const deleteWidgetData = async (widgetDef:WidgetDefinition) => {\n  // Request options\n  let options = {\n    method: \"DELETE\",\n    headers: header,\n  };\n  let response = await fetch(\n    serverUrl + api.widgets + \"/\" + widgetDef.id,\n    options\n  );\n  let data = await response.json();\n  return data;\n};\n\nexport const putWidgetData = async (widgetDef:WidgetDefinition) => {\n  // Request options\n  let options = {\n    method: \"PUT\",\n    headers: header,\n    body: JSON.stringify(widgetDef),\n  };\n  let response = await fetch(\n    serverUrl + api.widgets + \"/\" + widgetDef.id,\n    options\n  );\n  let data = await response.json();\n  return data;\n};","import { useState } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { widgetDataState, WidgetDefinition, widgetDefsState } from \"../../store/atoms\";\nimport { Select } from \"antd\";\nimport { replaceItemAtIndex } from \"../../shared/util\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { putWidgetData } from \"../../data-com/api\";\nimport \"./SummaryWidget.less\";\n\nconst { Option } = Select;\n\n  export default function SummaryWidget({widgetDef}: { widgetDef:WidgetDefinition}) {\n  const [year, setYear] = useState(widgetDef.data.year);\n  const widgetData = useRecoilValue(widgetDataState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  function handleChange(value: any) {\n    setYear(value);\n    let newWidgetDef = { ...widgetDef, data: { year: value}}\n    const index = widgetDefs.findIndex((e) => e.id === widgetDef.id);\n    const newList = replaceItemAtIndex(widgetDefs, index, newWidgetDef);\n    setWidgetDefs(newList);\n    putWidgetData(newWidgetDef);\n    console.log(`selected ${value}`);\n  }\n\n//   const options = widgetData? Object.keys(widgetData).map((year) => <Option key={year}>{year}</Option>): '';\n\n//   const content = widgetData && year && widgetData[year]?  Object.keys(widgetData[year]).map(prop => (\n//     <div className=\"info-snip\" key={uuidv4()}>\n//     <p className=\"info-heading\">{prop}</p>\n//     <p className=\"info-content\">{widgetData[year][prop]}</p>\n//     </div>\n//   )): '';\n\n  return (\n    <div className=\"widget-content\">\n      <Select className=\"date-select\"\n        defaultValue={widgetDef.data.year}\n        style={{ width: 80 }}\n        size=\"small\"\n        onChange={handleChange}>\n        {/* {options} */}\n      </Select>\n      {/* {content} */}\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { widgetDataState, WidgetDefinition, widgetDefsState } from \"../../store/atoms\";\nimport { Select } from \"antd\";\nimport { replaceItemAtIndex } from \"../../shared/util\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { putWidgetData } from \"../../data-com/api\";\nimport \"./ChartWidget.less\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\n\nconst { Option } = Select;\n\n  export default function ChartWidget({widgetDef}: { widgetDef:WidgetDefinition}) {\n  const [field, setField] = useState(widgetDef.data.field);\n  const widgetData = useRecoilValue(widgetDataState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  function handleChange(value:any) {\n    setField(value);\n    let newWidgetDef = { ...widgetDef, data: { field: value}, title: value}\n    const index = widgetDefs.findIndex((e) => e.id === widgetDef.id);\n    const newList = replaceItemAtIndex(widgetDefs, index, newWidgetDef);\n    setWidgetDefs(newList);\n    putWidgetData(newWidgetDef);\n    console.log(`selected ${value}`);\n  }\n//   let chartData = [];\n//   Object.keys(widgetData).forEach((year) =>  chartData.push({...widgetData[year], 'year': year}));\n\n//   const options = widgetData? Object.keys(widgetData[2020]).map((field) => <Option key={field}>{field}</Option>): '';\n\n//   const graph = (\n//     <LineChart width={660} height={320} data={chartData} margin={{ top: 20, right: 0, bottom: 0, left: 0 }}>\n//       <Line type=\"monotone\" dataKey={field} stroke=\"#8884d8\" />\n//       <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n//       <XAxis dataKey=\"year\" tick={1} />\n//       <YAxis />\n//       <Tooltip />\n//     </LineChart>\n//   );\n\n  return (\n    <div className=\"widget-content\">\n      <Select className=\"field-select\"\n        defaultValue={widgetDef.data.field}\n        style={{ width: 280 }}\n        size=\"small\"\n        onChange={handleChange}>\n        {/* {options} */}\n      </Select>\n      {/* {graph} */}\n    </div>\n  );\n}\n","import { useRecoilState } from \"recoil\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { Menu, Dropdown, message } from \"antd\";\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  CameraOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport \"./WidgetShell.less\";\nimport {\n  widgetDefsState,\n  editModalVisibleState,\n  widgetDefState,\n  deleteModalVisibleState,\n  WidgetDefinition,\n} from \"../../store/atoms\";\nimport SummaryWidget from \"../SummaryWidget/SummaryWidget\";\nimport ChartWidget from \"../ChartWidget/ChartWidget\";\n// import cloneDeep from \"lodash/cloneDeep\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { postWidgetData } from \"../../data-com/api\";\n\nconst handleButtonClick = (e: any) => {\n  message.info(\"Click on left button.\");\n  console.log(\"click left button\", e);\n};\n\nexport default function WidgetShell({widgetDef}: { widgetDef:WidgetDefinition}) {\n  const [, setEditModalVisible] = useRecoilState(editModalVisibleState);\n  const [, setDeleteModalVisible] = useRecoilState(deleteModalVisibleState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n  const [, setWidgetDef] = useRecoilState(widgetDefState);\n\n  const handleMenuClick = (e: any) => {\n    switch (e.key) {\n      case \"edit\":\n        // setWidgetDef(cloneDeep(widgetDef));\n        setEditModalVisible(true);\n        break;\n      case \"delete\":\n        // setWidgetDef(cloneDeep(widgetDef));\n        setDeleteModalVisible(true);\n        break;\n      case \"clone\":\n        // let clonedWidgetDef = cloneDeep(widgetDef);\n        // clonedWidgetDef.id = uuidv4();\n        // setWidgetDefs([...widgetDefs, clonedWidgetDef]);\n        // postWidgetData(clonedWidgetDef).then((data) => {\n        //   console.log(data);\n        // });\n        break;\n\n      default:\n        console.log(\"default\");\n    }\n  };\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"edit\" icon={<EditOutlined />}>\n        Edit\n      </Menu.Item>\n      <Menu.Item key=\"delete\" icon={<DeleteOutlined />}>\n        Delete\n      </Menu.Item>\n      <Menu.Item key=\"clone\" icon={<CopyOutlined />}>\n        Clone\n      </Menu.Item>\n      <Menu.Item key=\"snapshot\" icon={<CameraOutlined />}>\n        Snapshot\n      </Menu.Item>\n    </Menu>\n  );\n\n  function getWidget(type:any) {\n    switch (type) {\n      case \"SUMMARY\":\n        return <SummaryWidget widgetDef={widgetDef}></SummaryWidget>;\n      case \"CHART\":\n        return <ChartWidget widgetDef={widgetDef}></ChartWidget>;\n      case \"NOTES\":\n        return <SummaryWidget widgetDef={widgetDef}></SummaryWidget>;\n      default:\n        return '';\n    }\n  }\n\n  return (\n    <div className=\"widget-shell\">\n      <div className=\"header\">\n        <div className=\"top-left\">\n          <h3>{widgetDef.title}</h3>\n        </div>\n        <div className=\"top-right\">\n       <Dropdown.Button\n            icon={<EllipsisOutlined />}\n            size=\"small\"\n            type=\"primary\"\n            onClick={handleButtonClick}\n            overlay={menu}\n          /> \n        </div>\n        <div className=\"bottom-left\"></div>\n      </div>\n       {getWidget(widgetDef.type)}\n      TEST\n    </div>\n  );\n}\n","import { useRecoilState } from \"recoil\";\nimport { Modal, Typography } from \"antd\";\nimport { putWidgetData } from \"../../data-com/api\";\nimport {\n  widgetDefsState,\n  editModalVisibleState,\n  widgetDefState,\n} from \"../../store/atoms\";\nimport { replaceItemAtIndex } from \"../../shared/util\";\n\nconst { Paragraph } = Typography;\n\nexport default function EditWidgetModal() {\n  const [modalVisible, setModalVisible] = useRecoilState(editModalVisibleState);\n  const [widgetDef, setWidgetDef] = useRecoilState(widgetDefState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  const handleOk = (e:any) => {\n    const index = widgetDefs.findIndex((e) => e.id === widgetDef.id);\n    const newList = replaceItemAtIndex(widgetDefs, index, widgetDef);\n    setWidgetDefs(newList);\n    setModalVisible(false);\n    putWidgetData(widgetDef).then((data) => {\n      console.log(data);\n    });\n  };\n\n  const handleCancel = (e:any) => {\n    setModalVisible(false);\n  };\n\n  const editItemText = (value:any) => {\n    setWidgetDef({\n      ...widgetDef,\n      title: value,\n    });\n  };\n\n  return (\n    <Modal\n      title={\n        <Paragraph editable={{ onChange: editItemText }}>\n          {widgetDef ? widgetDef.title : \"\"}\n        </Paragraph>\n      }\n      visible={modalVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    ></Modal>\n  );\n}\n","import { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Modal, Button } from \"antd\";\nimport { deleteWidgetData } from \"../../data-com/api\";\nimport {\n  widgetDefsState,\n  deleteModalVisibleState,\n  widgetDefState,\n} from \"../../store/atoms\";\n\nexport default function DeleteWidgetModal() {\n  const [modalVisible, setModalVisible] = useRecoilState(\n    deleteModalVisibleState\n  );\n  const widgetDef = useRecoilValue(widgetDefState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  const handleOk = (e: any) => {\n    const newList = widgetDefs.filter((e) => e.id !== widgetDef.id);\n    setWidgetDefs(newList);\n    setModalVisible(false);\n    deleteWidgetData(widgetDef).then((data: any) => {\n      console.log(data);\n    });\n  };\n\n  const handleCancel = (e: any) => {\n    setModalVisible(false);\n  };\n\n  return (\n    <Modal\n      title=\"Title\"\n      visible={modalVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      footer={[\n        <Button key=\"cancel\" onClick={handleCancel}>\n          Cancel\n        </Button>,\n        <Button key=\"delete\" type=\"primary\" onClick={handleOk}>\n          Delete\n        </Button>,\n      ]}\n    ></Modal>\n  );\n}\n","import { useEffect } from \"react\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport { Button } from \"antd\";\nimport { LayoutOutlined } from \"@ant-design/icons\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  gridLayoutState,\n  widgetDefsState,\n  widgetDataState,\n  WidgetDefinition,\n} from \"../../store/atoms\";\nimport \"./Dashboard.less\";\nimport { widgets } from \"../../mock/widgets\";\nimport WidgetShell from \"../../widgets/WidgetShell/WidgetShell\";\nimport { DeleteWidgetModal, EditWidgetModal } from \"../../widgets\";\n\n//Page contains all the widgets created\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nfunction Dashboard() {\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n  const [gridLayout, setGridLayout] = useRecoilState(gridLayoutState);\n  const [ , setWidgetData] = useRecoilState(widgetDataState);\n\n  function onResizeStop(e: any) {\n    console.log(e);\n  }\n\n  useEffect(() => {\n    setWidgetDefs(widgets  as WidgetDefinition []);\n    // getWidgetsData().then((data) => {\n    //   console.log(data);\n    //   setWidgetDefs(data);\n    // });\n\n    // getData().then((data) => {\n    //   console.log(data);\n    //   setWidgetData(data);\n    // });\n  }, [setWidgetData, setWidgetDefs]);\n\n  const gridProps = {\n    isDraggable: true,\n    isResizable: true,\n    items: 20,\n    rowHeight: 10,\n    cols: 100,\n    onResizeStop: onResizeStop,\n    onLayoutChange: function () {},\n  };\n\n  const onSaveLayout = () => {\n    let hMap : Record<string ,WidgetDefinition> = {};\n\n    // gridLayout.forEach((item) => {\n    //   hMap[item.i] = item;\n    // });\n\n    const newDefs = widgetDefs.map((widgetDef) => {\n      let newDef = { ...widgetDef, ...hMap[widgetDef.id] };\n    //   delete newDef.i;\n      return newDef;\n    });\n    // newDefs.forEach((def) =>\n    //   putWidgetData(def).then((data) => {\n    //     console.log(data);\n    //   })\n    // );\n  };\n\n  const onLayoutChange = (layout: any) => {\n    setGridLayout(layout);\n\n    gridProps.onLayoutChange(); // updates status display\n  };\n\n  return (\n    <>\n      <EditWidgetModal></EditWidgetModal>\n      <DeleteWidgetModal></DeleteWidgetModal>\n      <Button\n        className=\"layout-save-btn\"\n        type=\"primary\"\n        shape=\"circle\"\n        icon={<LayoutOutlined />}\n        size={\"large\"}\n        onClick={onSaveLayout}\n      ></Button>\n      <ReactGridLayout\n        {...gridProps}\n        layout={gridLayout}\n        onLayoutChange={onLayoutChange}\n      >\n        {widgetDefs.map((widgetDef: WidgetDefinition) => (\n          <div key={widgetDef.id} data-grid={widgetDef}>\n            <WidgetShell key={widgetDef.id} widgetDef={widgetDef}></WidgetShell>\n          </div>\n        ))}\n      </ReactGridLayout>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import { useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport \"./AppLayout.less\";\nimport Dashboard from \"./pages/dashboard/Dashboard\";\n\n\n//Code is for the layout with three tabs.\n\nconst { Header, Content } = Layout;\n\nfunction getPage(nav: string) {\n     return <Dashboard />;\n    return `test ${nav}`;\n}\n\nfunction AppLayout() {\n  const [nav, setNav] = useState(\"1\");\n\n  return (\n    <Layout className=\"ars-layout\">\n      <Header>\n        <div className=\"ars-logo\" />\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          onClick={(e) => setNav(e.key)}\n          defaultSelectedKeys={[\"1\"]}\n        >\n          <Menu.Item key=\"1\">Dashboard</Menu.Item>\n        </Menu>\n      </Header>\n      <Content className=\"ars-layout-content\">{getPage(nav)}</Content>\n    </Layout>\n  );\n}\n\nexport default AppLayout;","import { RecoilRoot } from \"recoil\";\nimport AppLayout from \"./AppLayout\";\nimport './App.less';\n\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <AppLayout />\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}