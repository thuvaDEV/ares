{"version":3,"sources":["store/atoms.tsx","mock/widgets.ts","shared/util.tsx","data-com/api.tsx","widgets/SummaryWidget/SummaryWidget.tsx","widgets/ChartWidget/ChartWidget.tsx","widgets/WidgetShell/WidgetShell.tsx","widgets/EditWidgetModal/EditWidgetModal.tsx","widgets/DeleteWidgetModal/DeleteWidgetModal.tsx","mock/gdp-data.ts","pages/dashboard/Dashboard.tsx","AppLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["widgetDefsState","atom","key","default","widgetDefState","editModalVisibleState","deleteModalVisibleState","gridLayoutState","widgetDataState","widgets","id","x","y","w","h","minW","title","type","data","field","moved","static","year","subTitle","replaceItemAtIndex","arr","index","newValue","slice","DataType","serverUrl","env","Mock","isMock","api","header","getWidgetsDefs","a","fetch","response","json","postWidgetDef","widgetDef","options","method","headers","body","JSON","stringify","deleteWidgetDef","putWidgetDef","getWidgetsData","Option","Select","SummaryWidget","useState","setYear","widgetData","useRecoilValue","useRecoilState","widgetDefs","setWidgetDefs","Object","keys","map","value","content","prop","className","uuidv4","defaultValue","style","width","size","onChange","newWidgetDef","findIndex","e","newList","then","ChartWidget","setField","chartData","forEach","push","graph","LineChart","height","margin","top","right","bottom","left","Line","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","tick","YAxis","Tooltip","handleButtonClick","message","info","WidgetShell","setEditModalVisible","setDeleteModalVisible","setWidgetDef","menu","onClick","cloneDeep","clonedWidgetDef","Item","icon","EditOutlined","DeleteOutlined","CopyOutlined","disabled","CameraOutlined","Button","EllipsisOutlined","overlay","getWidget","Paragraph","Typography","EditWidgetModal","modalVisible","setModalVisible","editable","visible","onOk","onCancel","DeleteWidgetModal","handleOk","filter","handleCancel","footer","gdpData","GDP","ReactGridLayout","WidthProvider","RGL","Dashboard","gridLayout","setGridLayout","setWidgetData","useEffect","gridProps","isDraggable","isResizable","items","rowHeight","cols","onResizeStop","onLayoutChange","shape","GithubOutlined","href","LayoutOutlined","hMap","def","layout","data-grid","Header","Layout","Content","AppLayout","setNav","theme","mode","defaultSelectedKeys","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e6dca46.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const widgetType = {\n  notes: \"NOTES\",\n  chart: \"CHART\",\n  default: \"DEFAULT\",\n};\n\nexport const widgetDefsState = atom({\n  key: \"widgetDefsState\",\n  default: [],\n} as { key: string, default: WidgetDefinition[] });\n\nexport const widgetDefState = atom({\n  key: \"widgetDefState\",\n  default: {},\n} as { key: string, default: WidgetDefinition });\n\nexport const editModalVisibleState = atom({\n  key: \"editModalVisibleState\",\n  default: false,\n});\n\nexport const deleteModalVisibleState = atom({\n  key: \"deleteModalVisibleState\",\n  default: false,\n});\n\nexport const gridLayoutState = atom({\n  key: \"gridLayoutState\",\n  default: [],\n})\n\nexport const widgetDataState = atom({\n  key: \"widgetDataState\",\n  default: {},\n});\n\n\nexport interface WidgetDefinition {\n  id: string;\n  x: 25,\n  \"y\": 0,\n  \"w\": 24,\n  \"h\": 25,\n  \"minW\": 10,\n  \"title\": \"Canada's Economy\",\n  \"type\": \"SUMMARY\",\n  \"data\": any\n  \"moved\": false,\n  \"static\": false\n}","export const widgets = [\n  {\n    id: \"b96b559e-e89f-4fd8-aedd-05232fef5886\",\n    x: 49,\n    y: 19,\n    w: 48,\n    h: 26,\n    minW: 10,\n    title: \"Inflation %\",\n    type: \"CHART\",\n    data: {\n      field: \"Inflation %\",\n    },\n    moved: false,\n    static: false,\n  },\n  {\n    id: \"363a6652-8c8e-44fb-a312-1ccb10b3b8d8\",\n    x: 0,\n    y: 25,\n    w: 49,\n    h: 19,\n    minW: 10,\n    title: \"Notes on Growth\",\n    moved: false,\n    static: false,\n  },\n  {\n    id: \"ca94be55-9081-4101-8bb2-f37323176e49\",\n    x: 0,\n    y: 0,\n    w: 25,\n    h: 25,\n    minW: 10,\n    title: \"Canada's Economy\",\n    type: \"SUMMARY\",\n    data: {\n      year: \"2019\",\n    },\n    moved: false,\n    static: false,\n  },\n  {\n    id: \"e67cebc2-64d1-4eb7-a091-7833ecddd0cb\",\n    x: 25,\n    y: 0,\n    w: 24,\n    h: 25,\n    minW: 10,\n    title: \"Canada's Economy\",\n    type: \"SUMMARY\",\n    data: {\n      year: \"2015\",\n    },\n    moved: false,\n    static: false,\n  },\n  {\n    id: \"4820142f-b98c-4861-90d9-28de4a7a3ac0\",\n    x: 49,\n    y: 0,\n    w: 49,\n    h: 19,\n    minW: 10,\n    title: \"Government net lending/borrowing %\",\n    subTitle: \"2020\",\n    type: \"CHART\",\n    data: {\n      field: \"Government net lending/borrowing %\",\n    },\n    moved: false,\n    static: false,\n  },\n  {\n    id: \"29265280-a4d4-4fd8-83ad-b2f20575f010\",\n    x: 49,\n    y: 45,\n    w: 49,\n    h: 13,\n    minW: 10,\n    title: \"Notes on Growth\",\n    moved: false,\n    static: false,\n  },\n];\n","export function replaceItemAtIndex(arr: any, index: any, newValue: any) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nexport function removeItemAtIndex(arr: any, index: any) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n","import { WidgetDefinition } from \"../store/atoms\";\n\n// The JSON SERVER Endpoint \nconst serverUrl = \"http://localhost:3000/\"; // TODO: change it to firebase api\n\nexport enum DataType {\n  Mock = \"MOCK\",\n  API = \"API\"\n};\n\nexport const env = DataType.Mock;\n\nexport const isMock = () => { return env === DataType.Mock }\n\nconst api = {\n  widgets: \"widgets\",\n  data: \"data\",\n};\n\nconst header = { \"Content-Type\": \"application/json;charset=utf-8\" };\n\nexport const getWidgetsDefs = async () => {\n  let response = await fetch(serverUrl + api.widgets);\n  let data = await response.json();\n  return data;\n};\n\nexport const postWidgetDef = async (widgetDef: WidgetDefinition) => {\n  // Request options\n  let options = {\n    method: \"POST\",\n    headers: header,\n    body: JSON.stringify(widgetDef),\n  };\n  let response = await fetch(serverUrl + api.widgets, options);\n  let data = await response.json();\n  return data;\n};\n\nexport const deleteWidgetDef = async (widgetDef: WidgetDefinition) => {\n  // Request options\n  let options = {\n    method: \"DELETE\",\n    headers: header,\n  };\n  let response = await fetch(\n    serverUrl + api.widgets + \"/\" + widgetDef.id,\n    options\n  );\n  let data = await response.json();\n  return data;\n};\n\nexport const putWidgetDef = async (widgetDef: WidgetDefinition) => {\n  // Request options\n  let options = {\n    method: \"PUT\",\n    headers: header,\n    body: JSON.stringify(widgetDef),\n  };\n  let response = await fetch(\n    serverUrl + api.widgets + \"/\" + widgetDef.id,\n    options\n  );\n  let data = await response.json();\n  return data;\n};\n\nexport const getWidgetsData = async () => {\n  let response = await fetch(serverUrl + api.data);\n  let data = await response.json();\n  return data;\n};\n","import { useState } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { widgetDataState, WidgetDefinition, widgetDefsState } from \"../../store/atoms\";\nimport { Select } from \"antd\";\nimport { replaceItemAtIndex } from \"../../shared/util\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./SummaryWidget.less\";\nimport { isMock, putWidgetDef } from \"../../data-com/api\";\n\nconst { Option } = Select;\n\nexport default function SummaryWidget({ widgetDef }: { widgetDef: WidgetDefinition }) {\n  const [year, setYear] = useState(widgetDef.data.year);\n  const widgetData: Record<string, any> = useRecoilValue(widgetDataState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  function handleChange(value: any) {\n    setYear(value);\n    let newWidgetDef = { ...widgetDef, data: { year: value } }\n    const index = widgetDefs.findIndex((e) => e.id === widgetDef.id);\n    const newList = replaceItemAtIndex(widgetDefs, index, newWidgetDef);\n    setWidgetDefs(newList);\n    if (!isMock()) {\n      putWidgetDef(newWidgetDef).then((data) => {\n        // console.log(data);\n      });\n    }\n  }\n\n  const options = widgetData ? Object.keys(widgetData).map((year) => <Option key={year} value={year}>{year}</Option>) : '';\n\n  const content = widgetData && year && widgetData[year] ? Object.keys(widgetData[year]).map(prop => (\n    <div className=\"info-snip\" key={uuidv4()}>\n      <p className=\"info-heading\">{prop}</p>\n      <p className=\"info-content\">{widgetData[year][prop]}</p>\n    </div>\n  )) : '';\n\n  return (\n    <>\n      <Select className=\"date-select\"\n        defaultValue={widgetDef.data.year}\n        style={{ width: 80 }}\n        size=\"small\"\n        onChange={handleChange}>\n        {options}\n      </Select>\n      <div className=\"widget-info-content\">\n        {content}\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { widgetDataState, WidgetDefinition, widgetDefsState } from \"../../store/atoms\";\nimport { Select } from \"antd\";\nimport { replaceItemAtIndex } from \"../../shared/util\";\nimport { putWidgetDef } from \"../../data-com/api\";\nimport \"./ChartWidget.less\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\nconst { Option } = Select;\n\nexport default function ChartWidget({ widgetDef }: { widgetDef: WidgetDefinition }) {\n  const [field, setField] = useState(widgetDef.data.field);\n  const widgetData: Record<string, any> = useRecoilValue(widgetDataState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  function handleChange(value: any) {\n    setField(value);\n    let newWidgetDef = { ...widgetDef, data: { field: value }, title: value }\n    const index = widgetDefs.findIndex((e) => e.id === widgetDef.id);\n    const newList = replaceItemAtIndex(widgetDefs, index, newWidgetDef);\n    setWidgetDefs(newList);\n\n    putWidgetDef(newWidgetDef);\n  }\n  let chartData: any[] = [];\n  Object.keys(widgetData).forEach((year) => chartData.push({ ...widgetData[year], 'year': year }));\n\n  const options = widgetData ? Object.keys(widgetData[2020]).map((field) => <Option key={field} value={field}>{field}</Option>) : '';\n\n  const graph = (\n    <LineChart width={660} height={320} data={chartData} margin={{ top: 20, right: 0, bottom: 0, left: 0 }}>\n      <Line type=\"monotone\" dataKey={field} stroke=\"#8884d8\" />\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n      <XAxis dataKey=\"year\" tick={true} />\n      <YAxis />\n      <Tooltip />\n    </LineChart>\n  );\n\n  return (\n    <>\n      <Select className=\"field-select\"\n        defaultValue={widgetDef.data.field}\n        style={{ width: 280 }}\n        size=\"small\"\n        onChange={handleChange}>\n        {options}\n      </Select>\n      <div className=\"widget-content\">\n        {graph}\n      </div>\n    </>\n  );\n}\n","import { useRecoilState } from \"recoil\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { Menu, Dropdown, message } from \"antd\";\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  CameraOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport \"./WidgetShell.less\";\nimport {\n  widgetDefsState,\n  editModalVisibleState,\n  widgetDefState,\n  deleteModalVisibleState,\n  WidgetDefinition,\n} from \"../../store/atoms\";\nimport SummaryWidget from \"../SummaryWidget/SummaryWidget\";\nimport ChartWidget from \"../ChartWidget/ChartWidget\";\nimport { cloneDeep } from \"lodash-es\";\nimport { isMock, postWidgetDef } from \"../../data-com/api\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst handleButtonClick = (e: any) => {\n  message.info(\"Click on left button.\");\n};\n\nexport default function WidgetShell({ widgetDef }: { widgetDef: WidgetDefinition }) {\n  const [, setEditModalVisible] = useRecoilState(editModalVisibleState);\n  const [, setDeleteModalVisible] = useRecoilState(deleteModalVisibleState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n  const [, setWidgetDef] = useRecoilState(widgetDefState);\n\n  const handleMenuClick = (e: any) => {\n    switch (e.key) {\n      case \"edit\":\n        setWidgetDef(cloneDeep(widgetDef));\n        setEditModalVisible(true);\n        break;\n      case \"delete\":\n        setWidgetDef(cloneDeep(widgetDef));\n        setDeleteModalVisible(true);\n        break;\n      case \"clone\":\n        let clonedWidgetDef = cloneDeep(widgetDef);\n        clonedWidgetDef.id = uuidv4();\n        setWidgetDefs([...widgetDefs, clonedWidgetDef]);\n        if (!isMock()) {\n          postWidgetDef(clonedWidgetDef).then((data) => {\n            // console.log(data);\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"edit\" icon={<EditOutlined />}>\n        Edit\n      </Menu.Item>\n      <Menu.Item key=\"delete\" icon={<DeleteOutlined />}>\n        Delete\n      </Menu.Item>\n      <Menu.Item key=\"clone\" icon={<CopyOutlined />}>\n        Clone\n      </Menu.Item>\n      <Menu.Item disabled={true} key=\"snapshot\" icon={<CameraOutlined />}>\n        Snapshot\n      </Menu.Item>\n    </Menu>\n  );\n\n  function getWidget(type: any) {\n    switch (type) {\n      case \"SUMMARY\":\n        return <SummaryWidget widgetDef={widgetDef}></SummaryWidget>;\n      case \"CHART\":\n        return <ChartWidget widgetDef={widgetDef}></ChartWidget>;\n      case \"NOTES\":\n        return <SummaryWidget widgetDef={widgetDef}></SummaryWidget>;\n      default:\n        return '';\n    }\n  }\n\n  return (\n    <div className=\"widget-shell\">\n      <div className=\"header\">\n        <div className=\"top-left\">\n          <h3>{widgetDef.title}</h3>\n        </div>\n        <div className=\"top-right\">\n          <Dropdown.Button\n            icon={<EllipsisOutlined />}\n            size=\"small\"\n            type=\"primary\"\n            onClick={handleButtonClick}\n            overlay={menu}\n          />\n        </div>\n        <div className=\"bottom-left\"></div>\n      </div>\n      {getWidget(widgetDef.type)}\n    </div>\n  );\n}\n\n","import { useRecoilState } from \"recoil\";\nimport { Modal, Typography } from \"antd\";\nimport { isMock, putWidgetDef } from \"../../data-com/api\";\nimport {\n  widgetDefsState,\n  editModalVisibleState,\n  widgetDefState,\n} from \"../../store/atoms\";\nimport { replaceItemAtIndex } from \"../../shared/util\";\n\nconst { Paragraph } = Typography;\n\nexport default function EditWidgetModal() {\n  const [modalVisible, setModalVisible] = useRecoilState(editModalVisibleState);\n  const [widgetDef, setWidgetDef] = useRecoilState(widgetDefState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  const handleOk = (e:any) => {\n    const index = widgetDefs.findIndex((e) => e.id === widgetDef.id);\n    const newList = replaceItemAtIndex(widgetDefs, index, widgetDef);\n    setWidgetDefs(newList);\n    setModalVisible(false);\n\n    if(!isMock()) { \n      putWidgetDef(widgetDef).then((data) => {\n        // console.log(data);\n      });\n    }\n  };\n\n  const handleCancel = (e:any) => {\n    setModalVisible(false);\n  };\n\n  const editItemText = (value:any) => {\n    setWidgetDef({\n      ...widgetDef,\n      title: value,\n    });\n  };\n\n  return (\n    <Modal\n      title={\n        <Paragraph editable={{ onChange: editItemText }}>\n          {widgetDef ? widgetDef.title : \"\"}\n        </Paragraph>\n      }\n      visible={modalVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    ></Modal>\n  );\n}\n","import { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Modal, Button } from \"antd\";\nimport { deleteWidgetDef, isMock } from \"../../data-com/api\";\nimport {\n  widgetDefsState,\n  deleteModalVisibleState,\n  widgetDefState,\n} from \"../../store/atoms\";\n\nexport default function DeleteWidgetModal() {\n  const [modalVisible, setModalVisible] = useRecoilState(\n    deleteModalVisibleState\n  );\n  const widgetDef = useRecoilValue(widgetDefState);\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n\n  const handleOk = (e: any) => {\n    const newList = widgetDefs.filter((e) => e.id !== widgetDef.id);\n    setWidgetDefs(newList);\n    setModalVisible(false);\n\n    if (!isMock()) {\n      deleteWidgetDef(widgetDef).then((data: any) => {\n        // console.log(data);\n      });\n    }\n  };\n\n  const handleCancel = (e: any) => {\n    setModalVisible(false);\n  };\n\n  return (\n    <Modal\n      title=\"Title\"\n      visible={modalVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      footer={[\n        <Button key=\"cancel\" onClick={handleCancel}>\n          Cancel\n        </Button>,\n        <Button key=\"delete\" type=\"primary\" onClick={handleOk}>\n          Delete\n        </Button>,\n      ]}\n    ></Modal>\n  );\n}\n","export const gdpData = {\n  \"2014\": {\n    \"GDP % growth\": 2.87,\n    GDP: 1615.388,\n    \"GDP/capita\": 1.828,\n    \"Inflation %\": 1.907,\n    \"Unemployment rate\": 6.925,\n    \"Government net lending/borrowing %\": 0.175,\n    \"Current account balance\": -2.32,\n  },\n  \"2015\": {\n    \"GDP % growth\": 0.659,\n    GDP: 1642.965,\n    \"GDP/capita\": -0.147,\n    \"Inflation %\": 1.125,\n    \"Unemployment rate\": 6.9,\n    \"Government net lending/borrowing %\": -0.062,\n    \"Current account balance\": -3.495,\n  },\n  \"2016\": {\n    \"GDP % growth\": 1.001,\n    GDP: 1676.6,\n    \"GDP/capita\": -0.047,\n    \"Inflation %\": 1.429,\n    \"Unemployment rate\": 6.992,\n    \"Government net lending/borrowing %\": -0.453,\n    \"Current account balance\": -3.088,\n  },\n  \"2017\": {\n    \"GDP % growth\": 3.171,\n    GDP: 1762.337,\n    \"GDP/capita\": 1.928,\n    \"Inflation %\": 1.597,\n    \"Unemployment rate\": 6.342,\n    \"Government net lending/borrowing %\": -0.126,\n    \"Current account balance\": -2.811,\n  },\n  \"2018\": {\n    \"GDP % growth\": 2.014,\n    GDP: 1841.626,\n    \"GDP/capita\": 0.63,\n    \"Inflation %\": 2.268,\n    \"Unemployment rate\": 5.833,\n    \"Government net lending/borrowing %\": -0.397,\n    \"Current account balance\": -2.496,\n  },\n  \"2019\": {\n    \"GDP % growth\": 1.636,\n    GDP: 1904.393,\n    \"GDP/capita\": 0.193,\n    \"Inflation %\": 1.949,\n    \"Unemployment rate\": 5.667,\n    \"Government net lending/borrowing %\": -0.393,\n    \"Current account balance\": -1.97,\n  },\n  \"2020\": {\n    \"GDP % growth\": -6.226,\n    GDP: 1797.17,\n    \"GDP/capita\": -7.525,\n    \"Inflation %\": 0.61,\n    \"Unemployment rate\": 7.474,\n    \"Government net lending/borrowing %\": -11.837,\n    \"Current account balance\": -3.673,\n  },\n  \"2021\": {\n    \"GDP % growth\": 4.246,\n    GDP: 1910,\n    \"GDP/capita\": 3.126,\n    \"Inflation %\": 1.261,\n    \"Unemployment rate\": 7.214,\n    \"Government net lending/borrowing %\": -3.843,\n    \"Current account balance\": -2.311,\n  },\n};\n","import { useEffect } from \"react\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport { Button } from \"antd\";\nimport { LayoutOutlined, GithubOutlined } from \"@ant-design/icons\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  gridLayoutState,\n  widgetDefsState,\n  widgetDataState,\n  WidgetDefinition,\n} from \"../../store/atoms\";\nimport \"./Dashboard.less\";\nimport { widgets } from \"../../mock/widgets\";\nimport WidgetShell from \"../../widgets/WidgetShell/WidgetShell\";\nimport { DeleteWidgetModal, EditWidgetModal } from \"../../widgets\";\nimport { gdpData } from \"../../mock/gdp-data\";\nimport { getWidgetsData, getWidgetsDefs, isMock, putWidgetDef } from \"../../data-com/api\";\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nfunction Dashboard() {\n  const [widgetDefs, setWidgetDefs] = useRecoilState(widgetDefsState);\n  const [gridLayout, setGridLayout] = useRecoilState(gridLayoutState);\n  const [, setWidgetData] = useRecoilState(widgetDataState);\n\n  function onResizeStop(data: any) {\n    // console.log(data);\n  }\n\n  useEffect(() => {\n    isMock() ? setWidgetDefs(widgets as WidgetDefinition[]) :\n      getWidgetsDefs().then((data) => {\n        setWidgetDefs(data);\n      });\n\n    isMock() ? setWidgetData(gdpData as any) :\n      getWidgetsData().then((data) => {\n        setWidgetData(data);\n      });\n  }, [setWidgetData, setWidgetDefs]);\n\n  const gridProps = {\n    isDraggable: true,\n    isResizable: true,\n    items: 20,\n    rowHeight: 10,\n    cols: 100,\n    onResizeStop: onResizeStop,\n    onLayoutChange: function () { },\n  };\n\n  const onSaveLayout = () => {\n    let hMap: Record<string, WidgetDefinition> = {};\n\n    // gridLayout.forEach((item) => {\n    //   hMap[item.i] = item;\n    // });\n\n    const newDefs = widgetDefs.map((widgetDef) => {\n      let newDef = { ...widgetDef, ...hMap[widgetDef.id] };\n      // delete newDef.i;\n      return newDef;\n    });\n\n    newDefs.forEach((def) => {\n      if (!isMock()) {\n        putWidgetDef(def).then((data) => {\n          // console.log(data);\n        })\n      }\n    }\n    );\n  };\n\n  const onLayoutChange = (layout: any) => {\n    setGridLayout(layout);\n\n    gridProps.onLayoutChange(); // updates status display\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <EditWidgetModal></EditWidgetModal>\n      <DeleteWidgetModal></DeleteWidgetModal>\n      <div className=\"btns\">\n        <Button\n          className=\"github-btn\"\n          type=\"link\"\n          shape=\"circle\"\n          icon={<GithubOutlined />}\n          size={\"large\"}\n          href=\"https://github.com/thuvaDEV/ares\"\n        ></Button>\n        <Button\n          className=\"layout-save-btn\"\n          type=\"primary\"\n          shape=\"circle\"\n          title={isMock()? 'Save layout NOT available on mock': 'Save Layout'}\n          disabled={isMock()}\n          icon={<LayoutOutlined />}\n          size={\"large\"}\n          onClick={onSaveLayout}\n        ></Button>\n      </div>\n      <ReactGridLayout\n        {...gridProps}\n        layout={gridLayout}\n        onLayoutChange={onLayoutChange}\n      >\n        {(widgetDefs).map((widgetDef: WidgetDefinition) => (\n          <div key={widgetDef.id} data-grid={widgetDef}>\n            <WidgetShell key={widgetDef.id} widgetDef={widgetDef}></WidgetShell>\n          </div>\n        ))}\n      </ReactGridLayout>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import { useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport \"./AppLayout.less\";\nimport Dashboard from \"./pages/dashboard/Dashboard\";\n\nconst { Header, Content } = Layout;\n\nfunction getPage(nav: string) {\n  return <Dashboard />;\n}\n\nfunction AppLayout() {\n  const [nav, setNav] = useState(\"1\");\n\n  return (\n    <Layout className=\"ars-layout\">\n      <Header>\n        <div className=\"ars-logo\" />\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          onClick={(e) => setNav(e.key)}\n          defaultSelectedKeys={[\"1\"]}\n        >\n          <Menu.Item key=\"1\">Dashboard</Menu.Item>\n        </Menu>\n      </Header>\n      <Content className=\"ars-layout-content\">{getPage(nav)}</Content>\n    </Layout>\n  );\n}\n\nexport default AppLayout;","import { RecoilRoot } from \"recoil\";\nimport AppLayout from \"./AppLayout\";\nimport './App.less';\n\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <AppLayout />\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}